import{a as b,i as f}from"./assets/vendor-4yCzdkXl.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&a(i)}).observe(document,{childList:!0,subtree:!0});function s(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function a(e){if(e.ep)return;e.ep=!0;const o=s(e);fetch(e.href,o)}})();async function m(r,t){const s="https://pixabay.com",a="/api/",e="42059071-0978dc0d7158b742eee7c30f5",o={q:encodeURIComponent(r),image_type:"photo",orientation:"horizontal",safesearch:!0,page:t,per_page:15},i=`${s}${a}?key=${e}`;return(await b.get(i,{params:o})).data}function h(r){const{webformatURL:t,largeImageURL:s,comments:a,downloads:e,tags:o,likes:i,views:u}=r;return` <a href="${s}" class="card" >
      <li>
        <img src="${t}" alt="${o}" />
        <div class='card-bottom'>
        <p><b>Views: </b>${u}</p>
        <p><b>Likes: </b>${i}</p>
        <p><b>Downloads: </b>${e}</p>
        <p><b>Comments: </b>${a}</p>
        </div>
      </li>
    </a>`}function v(r){return r.map(h).join("")}const n={form:document.querySelector(".js-form"),more:document.querySelector(".js-more"),gallery:document.querySelector(".js-gallery"),target:document.querySelector(".js-target")};let c,l,d;n.form.addEventListener("submit",L);async function L(r){if(r.preventDefault(),c=1,l=r.target.elements.query.value.trim(),!l){f.warning({title:"Error!",message:"No query!",position:"center"});return}const t=await m(l,c);d=Math.ceil(t.total/15),t.total===0&&f.error({title:"Sorry!",message:"No images found for your query",position:"center"}),n.gallery.innerHTML="",p(t.hits),y(),n.form.reset()}async function q(){c+=1;const r=await m(l,c);p(r.hits),y();const t=n.gallery.firstElementChild.getBoundingClientRect().height;scrollBy({behavior:"smooth",top:t*2}),n.form.reset()}function p(r){const t=v(r);n.gallery.insertAdjacentHTML("beforeend",t)}const w={root:document.querySelector("#scrollArea"),rootMargin:"0px",threshold:1},S=(r,t)=>{r.forEach(s=>{s.isIntersecting&&q()})},g=new IntersectionObserver(S,w);function $(){g.observe(n.target)}function I(){g.unobserve(n.target)}function y(){c>=d?I():$()}
//# sourceMappingURL=index.js.map
